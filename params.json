{"name":"Rust-haikunator","tagline":"Generate Heroku-like random names to use in your Rust applications","body":"# [rust-haikunator](https://github.com/nishanths/rust-haikunator)\r\n\r\n[![Build Status](https://travis-ci.org/nishanths/rust-haikunator.svg?branch=master)](https://travis-ci.org/nishanths/rust-haikunator)\r\n[![Coverage Status](https://coveralls.io/repos/nishanths/rust-haikunator/badge.svg?branch=master&service=github)](https://coveralls.io/github/nishanths/rust-haikunator?branch=master)\r\n\r\nGenerate Heroku-like random names to use in your Rust applications.\r\n\r\n```\r\nsnowy-meadow-1347\r\ndelicate-haze-8496\r\ncold-wildflower-3957\r\n```\r\n\r\n[crates.io](https://crates.io/crates/haikunator/)\r\n\r\n## Installation\r\n\r\nAdd to your `Config.toml` dependencies\r\n\r\n```toml\r\n[dependencies]\r\n\r\nhaikunator = \"0.1.0\"\r\n```\r\n\r\n## Usage\r\n\r\nInclude the crate; create a `Haikunator` instance; then call `haikunate`.\r\n\r\n```rust\r\nextern crate haikunator;\r\n\r\nuse haikunator::{Haikunator};\r\n\r\nfn main() {\r\n    // normal usage\r\n    let haikunator = Haikunator::default();    \r\n    println!(\"{}\", haikunator.haikunate()); // => \"fancy-cloud-7181\"\r\n\r\n    // custom length (default=4)\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.token_length = 9;\r\n    println!(\"{}\", haikunator.haikunate()); // => \"rapid-mode-572457286\"\r\n\r\n    // use hex instead of numbers\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.token_hex = true;\r\n    println!(\"{}\", haikunator.haikunate()); // => \"misty-boat-bd01\"\r\n\r\n    // use custom chars instead of numbers/hex\r\n    // unicode works too\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.token_chars = \"HAIKUNATE忠犬ハチ公\";\r\n    println!(\"{}\", haikunator.haikunate()); // => \"divine-tiger-NKKチ\"\r\n\r\n    // don't include a token\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.token_length = 0;\r\n    println!(\"{}\", haikunator.haikunate()); // => \"lingering-term\"\r\n\r\n    // use a different delimiter\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.delimiter = \":\";\r\n    println!(\"{}\", haikunator.haikunate()); // => \"young:cell:5426\"\r\n\r\n    // no token, space delimiter\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.token_length = 0;\r\n    haikunator.delimiter = \" \";\r\n    println!(\"{}\", haikunator.haikunate()); // => \"wandering coke\"\r\n\r\n    // no token, empty delimiter\r\n    let mut haikunator = Haikunator::default();\r\n    haikunator.token_length = 0;\r\n    haikunator.delimiter = \"\";\r\n    println!(\"{}\", haikunator.haikunate()); // => \"freetooth\"\r\n\r\n    // custom nouns and/or adjectives\r\n    let haikunator = Haikunator {\r\n        adjectives: &[\"dandy\", \"froody\", \"happy\"],\r\n        nouns: &[\"whale\", \"towel\", \"earth\"],\r\n        delimiter: \"-\",\r\n        token_length: 3,\r\n        token_hex: false,\r\n        token_chars: \"24\",\r\n    };\r\n    println!(\"{}\", haikunator.haikunate()); // => \"happy-earth-444\"\r\n}\r\n```\r\n\r\nSee the test files at [`tests/lib.rs`](https://github.com/nishanths/rust-haikunator/blob/master/tests/lib.rs) for more examples.\r\n\r\n## Options\r\n\r\nThe following options are available:\r\n\r\n```rust\r\npub struct Haikunator<'a> {\r\n    pub adjectives: &'a [&'a str],\r\n    pub nouns: &'a [&'a str],\r\n    pub delimiter: &'a str,\r\n    pub token_length: usize,\r\n    pub token_hex: bool,\r\n    pub token_chars: &'a str,\r\n}\r\n```\r\n\r\n**Note**: If `token_hex` is true, the value of `token_chars` is ignored.\r\n\r\n## Contributing\r\n\r\nEveryone is encouraged to help improve this project. Here are a few ways you can help:\r\n\r\n- [Report bugs](https://github.com/nishanths/rust-haikunator/issues)\r\n- Fix bugs and [submit pull requests](https://github.com/nishanths/rust-haikunator/pulls)\r\n- Write, clarify, or fix documentation\r\n- Suggest or add new features\r\n\r\n## Other Languages\r\n\r\nHaikunator is also available in other languages. Check them out:\r\n\r\n- Go: <https://github.com/Atrox/haikunatorgo>\r\n- Node: <https://github.com/Atrox/haikunatorjs>\r\n- .NET: <https://github.com/Atrox/haikunator.net>\r\n- Python: <https://github.com/Atrox/haikunatorpy>\r\n- PHP: <https://github.com/Atrox/haikunatorphp>\r\n- Java: <https://github.com/Atrox/haikunatorjava>\r\n- Dart: <https://github.com/Atrox/haikunatordart>\r\n- Ruby: <https://github.com/usmanbashir/haikunator>\r\n\r\n## License\r\n\r\nrust-haikunator is available under the [MIT License](https://github.com/nishanths/rust-haikunator/blob/master/LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}